digraph "sf::RenderTarget"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{sf::RenderTarget\n||+ ~RenderTarget()\l+ clear()\l+ setView()\l+ getView()\l+ getDefaultView()\l+ getViewport()\l+ mapPixelToCoords()\l+ mapPixelToCoords()\l+ mapCoordsToPixel()\l+ mapCoordsToPixel()\l+ draw()\l+ draw()\l+ draw()\l+ draw()\l+ getSize()\l+ setActive()\l+ pushGLStates()\l+ popGLStates()\l+ resetGLStates()\l+ ~RenderTarget()\l+ clear()\l+ setView()\l+ getView()\l+ getDefaultView()\l+ getViewport()\l+ mapPixelToCoords()\l+ mapPixelToCoords()\l+ mapCoordsToPixel()\l+ mapCoordsToPixel()\l+ draw()\l+ draw()\l+ draw()\l+ draw()\l+ getSize()\l+ setActive()\l+ pushGLStates()\l+ popGLStates()\l+ resetGLStates()\l# RenderTarget()\l# initialize()\l# RenderTarget()\l# initialize()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for all render targets (window, texture, ...)"];
  Node2 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{sf::NonCopyable\n||# NonCopyable()\l# ~NonCopyable()\l# NonCopyable()\l# ~NonCopyable()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1NonCopyable.html",tooltip="Utility class that makes any derived class non-copyable."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{sf::RenderTexture\n||+ RenderTexture()\l+ ~RenderTexture()\l+ create()\l+ create()\l+ setSmooth()\l+ isSmooth()\l+ setRepeated()\l+ isRepeated()\l+ generateMipmap()\l+ setActive()\l+ display()\l+ getSize()\l+ getTexture()\l+ RenderTexture()\l+ ~RenderTexture()\l+ create()\l+ create()\l+ setSmooth()\l+ isSmooth()\l+ setRepeated()\l+ isRepeated()\l+ generateMipmap()\l+ setActive()\l+ display()\l+ getSize()\l+ getTexture()\l+ getMaximumAntialiasingLevel()\l+ getMaximumAntialiasingLevel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RenderTexture.html",tooltip="Target for off-screen 2D rendering into a texture."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{sf::RenderWindow\n||+ RenderWindow()\l+ RenderWindow()\l+ RenderWindow()\l+ ~RenderWindow()\l+ getSize()\l+ setActive()\l+ capture()\l+ RenderWindow()\l+ RenderWindow()\l+ RenderWindow()\l+ ~RenderWindow()\l+ getSize()\l+ setActive()\l+ capture()\l# onCreate()\l# onResize()\l# onCreate()\l# onResize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RenderWindow.html",tooltip="Window that can serve as a target for 2D drawing."];
}
