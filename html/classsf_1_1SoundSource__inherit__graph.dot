digraph "sf::SoundSource"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{sf::SoundSource\n|# m_source\l|+ SoundSource()\l+ ~SoundSource()\l+ setPitch()\l+ setVolume()\l+ setPosition()\l+ setPosition()\l+ setRelativeToListener()\l+ setMinDistance()\l+ setAttenuation()\l+ getPitch()\l+ getVolume()\l+ getPosition()\l+ isRelativeToListener()\l+ getMinDistance()\l+ getAttenuation()\l+ operator=()\l+ play()\l+ pause()\l+ stop()\l+ getStatus()\l+ SoundSource()\l+ ~SoundSource()\l+ setPitch()\l+ setVolume()\l+ setPosition()\l+ setPosition()\l+ setRelativeToListener()\l+ setMinDistance()\l+ setAttenuation()\l+ getPitch()\l+ getVolume()\l+ getPosition()\l+ isRelativeToListener()\l+ getMinDistance()\l+ getAttenuation()\l+ operator=()\l+ play()\l+ pause()\l+ stop()\l+ getStatus()\l# SoundSource()\l# SoundSource()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class defining a sound's properties."];
  Node2 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{sf::AlResource\n||# AlResource()\l# ~AlResource()\l# AlResource()\l# ~AlResource()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1AlResource.html",tooltip="Base class for classes that require an OpenAL context."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{sf::Sound\n||+ Sound()\l+ Sound()\l+ Sound()\l+ ~Sound()\l+ play()\l+ pause()\l+ stop()\l+ setBuffer()\l+ setLoop()\l+ setPlayingOffset()\l+ getBuffer()\l+ getLoop()\l+ getPlayingOffset()\l+ getStatus()\l+ operator=()\l+ resetBuffer()\l+ Sound()\l+ Sound()\l+ Sound()\l+ ~Sound()\l+ play()\l+ pause()\l+ stop()\l+ setBuffer()\l+ setLoop()\l+ setPlayingOffset()\l+ getBuffer()\l+ getLoop()\l+ getPlayingOffset()\l+ getStatus()\l+ operator=()\l+ resetBuffer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Sound.html",tooltip="Regular sound that can be played in the audio environment."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{sf::SoundStream\n||+ ~SoundStream()\l+ play()\l+ pause()\l+ stop()\l+ getChannelCount()\l+ getSampleRate()\l+ getStatus()\l+ setPlayingOffset()\l+ getPlayingOffset()\l+ setLoop()\l+ getLoop()\l+ ~SoundStream()\l+ play()\l+ pause()\l+ stop()\l+ getChannelCount()\l+ getSampleRate()\l+ getStatus()\l+ setPlayingOffset()\l+ getPlayingOffset()\l+ setLoop()\l+ getLoop()\l# SoundStream()\l# initialize()\l# onGetData()\l# onSeek()\l# onLoop()\l# SoundStream()\l# initialize()\l# onGetData()\l# onSeek()\l# onLoop()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1SoundStream.html",tooltip="Abstract base class for streamed audio sources."];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{sf::Music\n||+ Music()\l+ ~Music()\l+ openFromFile()\l+ openFromMemory()\l+ openFromStream()\l+ getDuration()\l+ getLoopPoints()\l+ setLoopPoints()\l+ Music()\l+ ~Music()\l+ openFromFile()\l+ openFromMemory()\l+ openFromStream()\l+ getDuration()\l+ getLoopPoints()\l+ setLoopPoints()\l# onGetData()\l# onSeek()\l# onLoop()\l# onGetData()\l# onSeek()\l# onLoop()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Music.html",tooltip="Streamed music played from an audio file."];
}
