digraph "sf::Window"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{sf::Window\n||+ Window()\l+ Window()\l+ Window()\l+ ~Window()\l+ create()\l+ create()\l+ close()\l+ isOpen()\l+ getSettings()\l+ pollEvent()\l+ waitEvent()\l+ getPosition()\l+ setPosition()\l+ getSize()\l+ setSize()\l+ setTitle()\l+ setIcon()\l+ setVisible()\l+ setVerticalSyncEnabled()\l+ setMouseCursorVisible()\l+ setMouseCursorGrabbed()\l+ setMouseCursor()\l+ setKeyRepeatEnabled()\l+ setFramerateLimit()\l+ setJoystickThreshold()\l+ setActive()\l+ requestFocus()\l+ hasFocus()\l+ display()\l+ getSystemHandle()\l+ Window()\l+ Window()\l+ Window()\l+ ~Window()\l+ create()\l+ create()\l+ close()\l+ isOpen()\l+ getSettings()\l+ pollEvent()\l+ waitEvent()\l+ getPosition()\l+ setPosition()\l+ getSize()\l+ setSize()\l+ setTitle()\l+ setIcon()\l+ setVisible()\l+ setVerticalSyncEnabled()\l+ setMouseCursorVisible()\l+ setMouseCursorGrabbed()\l+ setMouseCursor()\l+ setKeyRepeatEnabled()\l+ setFramerateLimit()\l+ setJoystickThreshold()\l+ setActive()\l+ requestFocus()\l+ hasFocus()\l+ display()\l+ getSystemHandle()\l# onCreate()\l# onResize()\l# onCreate()\l# onResize()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Window that serves as a target for OpenGL rendering."];
  Node2 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{sf::GlResource\n||# GlResource()\l# ~GlResource()\l# GlResource()\l# ~GlResource()\l# registerContextDestroyCallback()\l# registerContextDestroyCallback()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1GlResource.html",tooltip="Base class for classes that require an OpenGL context."];
  Node3 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{sf::NonCopyable\n||# NonCopyable()\l# ~NonCopyable()\l# NonCopyable()\l# ~NonCopyable()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1NonCopyable.html",tooltip="Utility class that makes any derived class non-copyable."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{sf::RenderWindow\n||+ RenderWindow()\l+ RenderWindow()\l+ RenderWindow()\l+ ~RenderWindow()\l+ getSize()\l+ setActive()\l+ capture()\l+ RenderWindow()\l+ RenderWindow()\l+ RenderWindow()\l+ ~RenderWindow()\l+ getSize()\l+ setActive()\l+ capture()\l# onCreate()\l# onResize()\l# onCreate()\l# onResize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RenderWindow.html",tooltip="Window that can serve as a target for 2D drawing."];
}
