digraph "sf::InputStream"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{sf::InputStream\n||+ ~InputStream()\l+ read()\l+ seek()\l+ tell()\l+ getSize()\l+ ~InputStream()\l+ read()\l+ seek()\l+ tell()\l+ getSize()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Abstract class for custom file input streams."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{sf::FileInputStream\n||+ FileInputStream()\l+ ~FileInputStream()\l+ open()\l+ read()\l+ seek()\l+ tell()\l+ getSize()\l+ FileInputStream()\l+ ~FileInputStream()\l+ open()\l+ read()\l+ seek()\l+ tell()\l+ getSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1FileInputStream.html",tooltip="Implementation of input stream based on a file."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{sf::MemoryInputStream\n||+ MemoryInputStream()\l+ open()\l+ read()\l+ seek()\l+ tell()\l+ getSize()\l+ MemoryInputStream()\l+ open()\l+ read()\l+ seek()\l+ tell()\l+ getSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1MemoryInputStream.html",tooltip="Implementation of input stream based on a memory chunk."];
}
