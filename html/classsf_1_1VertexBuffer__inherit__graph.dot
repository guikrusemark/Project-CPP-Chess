digraph "sf::VertexBuffer"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{sf::VertexBuffer\n||+ VertexBuffer()\l+ VertexBuffer()\l+ VertexBuffer()\l+ VertexBuffer()\l+ VertexBuffer()\l+ ~VertexBuffer()\l+ create()\l+ getVertexCount()\l+ update()\l+ update()\l+ update()\l+ operator=()\l+ swap()\l+ getNativeHandle()\l+ setPrimitiveType()\l+ getPrimitiveType()\l+ setUsage()\l+ getUsage()\l+ VertexBuffer()\l+ VertexBuffer()\l+ VertexBuffer()\l+ VertexBuffer()\l+ VertexBuffer()\l+ ~VertexBuffer()\l+ create()\l+ getVertexCount()\l+ update()\l+ update()\l+ update()\l+ operator=()\l+ swap()\l+ getNativeHandle()\l+ setPrimitiveType()\l+ getPrimitiveType()\l+ setUsage()\l+ getUsage()\l+ bind()\l+ isAvailable()\l+ bind()\l+ isAvailable()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Vertex buffer storage for one or more 2D primitives."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{sf::Drawable\n||+ ~Drawable()\l+ ~Drawable()\l# draw()\l# draw()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Drawable.html",tooltip="Abstract base class for objects that can be drawn to a render target."];
  Node3 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{sf::GlResource\n||# GlResource()\l# ~GlResource()\l# GlResource()\l# ~GlResource()\l# registerContextDestroyCallback()\l# registerContextDestroyCallback()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1GlResource.html",tooltip="Base class for classes that require an OpenGL context."];
}
