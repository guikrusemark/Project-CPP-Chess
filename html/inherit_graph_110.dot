digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node171 [label="sf::Drawable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Drawable.html",tooltip="Abstract base class for objects that can be drawn to a render target."];
  Node171 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="sf::Shape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Shape.html",tooltip="Base class for textured shapes with outline."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="sf::CircleShape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1CircleShape.html",tooltip="Specialized shape representing a circle."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="sf::ConvexShape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1ConvexShape.html",tooltip="Specialized shape representing a convex polygon."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="sf::RectangleShape",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RectangleShape.html",tooltip="Specialized shape representing a rectangle."];
  Node171 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="sf::Sprite",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Sprite.html",tooltip="Drawable representation of a texture, with its own transformations, color, etc."];
  Node171 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="sf::Text",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Text.html",tooltip="Graphical text that can be drawn to a render target."];
  Node171 -> Node172 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node172 [label="sf::VertexArray",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1VertexArray.html",tooltip="Define a set of one or more 2D primitives."];
  Node171 -> Node149 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 [label="sf::VertexBuffer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1VertexBuffer.html",tooltip="Vertex buffer storage for one or more 2D primitives."];
  Node147 [label="sf::GlResource",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1GlResource.html",tooltip="Base class for classes that require an OpenGL context."];
  Node147 -> Node91 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="sf::Context",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Context.html",tooltip="Class holding a valid drawing context."];
  Node147 -> Node104 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="sf::Shader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Shader.html",tooltip="Shader class (vertex, geometry and fragment)"];
  Node147 -> Node148 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node148 [label="sf::Texture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Texture.html",tooltip="Image living on the graphics card that can be used for drawing."];
  Node147 -> Node149 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 -> Node112 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 [label="sf::Window",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Window.html",tooltip="Window that serves as a target for OpenGL rendering."];
  Node112 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="sf::RenderWindow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RenderWindow.html",tooltip="Window that can serve as a target for 2D drawing."];
  Node135 [label="sf::InputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1InputStream.html",tooltip="Abstract class for custom file input streams."];
  Node135 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="sf::FileInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1FileInputStream.html",tooltip="Implementation of input stream based on a file."];
  Node135 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="sf::MemoryInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1MemoryInputStream.html",tooltip="Implementation of input stream based on a memory chunk."];
  Node90 [label="sf::NonCopyable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1NonCopyable.html",tooltip="Utility class that makes any derived class non-copyable."];
  Node90 -> Node91 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 -> Node92 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="sf::Cursor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Cursor.html",tooltip="Cursor defines the appearance of a system cursor."];
  Node90 -> Node93 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 -> Node94 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="sf::Ftp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Ftp.html",tooltip="A FTP client."];
  Node90 -> Node95 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="sf::GlResource::Transient\lContextLock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1GlResource_1_1TransientContextLock.html",tooltip="RAII helper class to temporarily lock an available context for use."];
  Node90 -> Node96 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="sf::Http",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Http.html",tooltip="A HTTP client."];
  Node90 -> Node97 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="sf::InputSoundFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1InputSoundFile.html",tooltip="Provide read access to sound files."];
  Node90 -> Node98 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 [label="sf::Lock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Lock.html",tooltip="Automatic wrapper for locking and unlocking mutexes."];
  Node90 -> Node99 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 [label="sf::Mutex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Mutex.html",tooltip="Blocks concurrent access to shared resources from multiple threads."];
  Node90 -> Node100 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="sf::OutputSoundFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1OutputSoundFile.html",tooltip="Provide write access to sound files."];
  Node90 -> Node101 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="sf::RenderTarget",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RenderTarget.html",tooltip="Base class for all render targets (window, texture, ...)"];
  Node101 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="sf::RenderTexture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1RenderTexture.html",tooltip="Target for off-screen 2D rendering into a texture."];
  Node101 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 -> Node104 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 -> Node105 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="sf::Socket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Socket.html",tooltip="Base class for all the socket types."];
  Node105 -> Node106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="sf::TcpListener",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1TcpListener.html",tooltip="Socket that listens to new TCP connections."];
  Node105 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="sf::TcpSocket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1TcpSocket.html",tooltip="Specialized socket using the TCP protocol."];
  Node105 -> Node108 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="sf::UdpSocket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1UdpSocket.html",tooltip="Specialized socket using the UDP protocol."];
  Node90 -> Node109 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="sf::Thread",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Thread.html",tooltip="Utility class to manipulate threads."];
  Node90 -> Node110 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node110 [label="sf::ThreadLocal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1ThreadLocal.html",tooltip="Defines variables with thread-local storage."];
  Node110 -> Node111 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node111 [label="sf::ThreadLocalPtr\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1ThreadLocalPtr.html",tooltip="Pointer to a thread-local variable."];
  Node90 -> Node112 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 [label="sf::Transformable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1Transformable.html",tooltip="Decomposed transform defined by a position, a rotation and a scale."];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
